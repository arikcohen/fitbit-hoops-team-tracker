/**
 * Will be called when the view gets unloaded.
 */
declare type Dispose = () => void;
declare type ViewModel = (params?: any) => Dispose | void;
declare type ViewsMap = {
    [viewId: string]: ViewModel;
};
declare type SetupOptions = {
    getViewFilename?: (viewId: string) => string;
};
/**
 * Handle hardware button actions.
 */
export declare const buttons: {
    /**
     * Will be called when the back button gets pressed.
     */
    back?: () => void;
};
/**
 * Initialize all the views. By default, they will be loaded from `resources/` with a `.gui` extension.
 * @param views A map to relate the each `view id` with its `view` initialization.
 * @param path Prepend your custom path, if any. Useful to load views under deeper paths like `resources/views/`.
 */
export declare const setup: (views: ViewsMap, options?: SetupOptions | undefined) => void;
export declare const next: (viewId: string, params?: any) => void;
export declare const back: (params?: any) => void;
export {};
