import { display } from 'display';
import document from 'document';
var currentDispose;
var stack = [];
var setupViews = {};
var setupOptions;
/**
 * Handle hardware button actions.
 */
export var buttons = {};
/**
 * Initialize all the views. By default, they will be loaded from `resources/` with a `.gui` extension.
 * @param views A map to relate the each `view id` with its `view` initialization.
 * @param path Prepend your custom path, if any. Useful to load views under deeper paths like `resources/views/`.
 */
export var setup = function (views, options) {
    setupViews = views;
    setupOptions = options;
    stack = [];
};
export var next = function (viewId, params) {
    stack.push(viewId);
    load(viewId, params);
};
export var back = function (params) {
    stack.pop();
    var viewId = stack[stack.length - 1];
    if (!viewId) {
        return;
    }
    load(viewId, params);
};
var load = function (viewId, params) {
    if (currentDispose) {
        currentDispose();
    }
    var viewModel = setupViews[viewId];
    if (!viewModel) {
        throw new Error("Unknown view: " + viewId);
    }
    delete buttons.back;
    // @ts-ignore
    document.replaceSync(setupOptions && setupOptions.getViewFilename
        ? setupOptions.getViewFilename(viewId)
        : "./resources/" + viewId + ".gui");
    document.addEventListener('keypress', function (e) {
        if (e.key === 'back') {
            if (buttons.back) {
                buttons.back();
            }
            else {
                back();
            }
            if (stack.length) {
                e.preventDefault();
            }
        }
    });
    currentDispose = viewModel(params);
    display.poke();
};
